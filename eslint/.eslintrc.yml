---
  env:
    browser:  true
    commonjs: true
    jquery:   true
  extends: "eslint:recommended"
  parserOptions:
    ecmaVersion:    6
    # in case we turn off babelify, still want devs to `use strict` and run in
    # strict
    impliedStrict:  false
  rules:
    arrow-body-style:
      - error
      - "always"
    arrow-parens:
      - error
      - "always"
    arrow-spacing:
      - error
      -
        before: true
        after: true
    block-scoped-var:
      - error
    block-spacing:
      - error
    brace-style:
      - warn
      - "stroustrup"
    camelcase:
      - warn
    comma-dangle:
      - error
      - "always-multiline"
    comma-spacing:
      - error
      -
        before: false
        after: true
    comma-style:
      - error
      - "last"
    computed-property-spacing:
      - error
      - "never"
    complexity: # disabled for now
      - error
      - 20
    consistent-return: # conflicts with return false for event handlers
      - 0
    dot-location:
      - warn
      - "property"
    eol-last: 0
    indent:
      - error
      - 2
      -
        SwitchCase: 1
    keyword-spacing: error
    max-depth:
      - error
      - 3
    max-nested-callbacks:
      - warn
      - 3
    max-params:
      - error
      - 3
    new-cap: error
    new-parens: error
    no-alert: error
    no-caller: error
    no-cond-assign: error
    no-console: warn
    no-constant-condition: error
    no-control-regex: error
    no-debugger: warn
    no-dupe-args: error
    no-dupe-keys: error
    no-duplicate-case: error
    no-empty-character-class: error
    no-empty: error
    no-ex-assign: error
    no-extend-native: error
    no-extra-boolean-cast: error
    no-extra-label: error
    no-extra-parens: 0
    no-extra-semi: error
    no-floating-decimal: error
    no-func-assign: error
    no-implied-eval: error
    no-inner-declarations: error
    no-invalid-regexp: error
    no-irregular-whitespace: error
    no-iterator: error
    no-labels: error
    no-lone-blocks: error
    no-loop-func: error
    no-negated-in-lhs: error
    no-obj-calls: error
    no-regex-spaces: error
    no-spaced-func: error
    no-sparse-arrays: error
    no-unexpected-multiline: error
    no-unreachable: error
    no-use-before-define: error
    no-magic-numbers:
      - warn
      -
        ignore:
          - -1
          - 0
          - 1
          - 2
    no-mixed-spaces-and-tabs:
      - error
      - "smart-tabs"
    no-native-reassign: error
    no-nested-ternary: error
    no-plusplus: warn
    no-return-assign: error
    no-self-compare: error
    no-throw-literal: error
    no-trailing-spaces: error
    no-underscore-dangle: 0
    no-unreachable: 0
    no-unused-vars:
      - error
      -
        args: "none"
    no-with: error
    object-curly-spacing:
      - error
      - "always"
    object-shorthand:
      - error
      - "never"
    one-var:
      - error
      - "never"
    quote-props:
      - error
      - "consistent"
      -
        keywords: true
    quotes:
      - warn
      - "single"
    radix: error
    semi:
      - error
      - "always"
    semi-spacing:
      - error
      -
        before: false
        after: true
    space-before-blocks: error
    space-before-function-paren:
      - warn
      -
        anonymous: "always"
        named: "never"
    space-infix-ops:
      - error
      -
        int32Hint: false
    space-unary-ops: error
    use-isnan: error
    valid-jsdoc:
      - warn
      -
        requireParamDescription: false
        requireReturn: false
        requireReturnDescription: false
        preferType:
          string:  "String"
          object:  "Object"
          number:  "Number"
          integer: "Number"
          float:   "Number"
          int:     "Number"
    valid-typeof: error
    wrap-iife:
      - error
      - "any"
    yoda:
      - error
      - "never"
