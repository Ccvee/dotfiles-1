set encoding=utf-8 nobomb
scriptencoding utf-8
" note: set encoding BEFORE scriptencoding

" http://www.reddit.com/r/vim/comments/2z2fg0/need_some_inspiration_for_your_vimrc/cpf8zho
" no nocompatible!
set nocompatible

if has("autocmd")
  augroup vimrc
    autocmd!
  augroup END

  " Only load plugins on vim 7.3+ with autocmd
  if $DOTFILES_DISTRO != "busybox"
    source ~/.vim/rc/neobundle.vim
  endif
endif

" From tpope/vim-sensible: load matchit.vim, but only if the user hasn't
" installed a newer version.
"
" For macvim it is found here:
" /Applications/MacVim.app/Contents/Resources/vim/runtime/macros/matchit.vim
"
if !exists('g:loaded_matchit') && findfile('plugin/matchit.vim', &rtp) ==# ''
  runtime! macros/matchit.vim
endif

" load ~/.vim/filetype.vim, ftplugin, ftindent
filetype plugin indent on

" syntax highlighting
if has('syntax') && !exists('g:syntax_on')
  syntax enable
endif

set modeline

" Display ----------------------------------------------------------------------
set visualbell                        " no beeps
set ttyfast
set lazyredraw                        " don't update the display while
                                      " executing macros
set synmaxcol=512                     " don't syntax highlight long lines

if !has('gui_running')
  if $COLORTERM == "gnome-terminal"
    set t_Co=256
  endif
  colorscheme pablo
endif

set colorcolumn=80
set title                             " wintitle = filename - vim
set number
set numberwidth=5
set cursorline
set scrolloff=8                       " show 2 lines of context
set sidescrolloff=16

" status line - most of this is handled by vim-powerline
set laststatus=2
set showcmd                           " incomplete commands on

" folds
set foldcolumn=2
set foldlevel=99                      " show all folds by default
set foldlevelstart=99                 " show all folds by default

" splits
set splitbelow
set splitright

" input
set formatoptions=
set formatoptions+=c                  " Format comments
set formatoptions+=r                  " Continue comments by default
set formatoptions+=o                  " continue comment using o or O
set formatoptions+=q                  " continue comments with gq
set formatoptions+=n                  " Recognize numbered lists
set formatoptions+=2                  " Use indent from 2nd line of a paragraph
set formatoptions+=l                  " Don't break lines that are already long
set formatoptions+=1                  " Break before 1-letter words
" Vim 7.4 only: no // comment when joining commented lines
if v:version >= 704
  set formatoptions+=j
endif
set nrformats-=octal                  " never use octal when <C-x> or <C-a>
set nojoinspaces                      " J command doesn't add extra space
set mouse=a
set ttymouse=xterm

" custom autocomplete dictionary
set dictionary+=$VIMFILES/dict/mine.dict

" whitespace
set nowrap
set autoindent
set preserveindent                    " stay indented when press enter
set expandtab                         " spaces instead of tabs
set tabstop=2
set shiftwidth=2
set shiftround                        " use multiple of shiftwidth when
set smarttab
                                      " indenting with '<' and '>'
set softtabstop=2                     " tabs look like 2 spaces
set backspace=indent,eol,start        " bs anything

" Trailing whitespace
set list
set listchars=""                      " reset
set listchars=tab:→\ 
set listchars+=trail:·
set listchars+=extends:»              " show cut off when nowrap
set listchars+=precedes:«

set fillchars=diff:⣿,vert:│
set fillchars=diff:⣿,vert:\|

" diffing
set diffopt=filler                    " blank lines to keep sides aligned
set diffopt+=iwhite                   " Ignore whitespace changes

" match and search
set showmatch                         " hl matching parens
set hlsearch
set incsearch
set wrapscan                          " Searches wrap around end of the file.
set ignorecase
set smartcase
" fix regexes
nnoremap / /\v
vnoremap / /\v
" The Silver Searcher
if executable('ag')
  set grepprg=ag\ --nogroup\ --nocolor
endif

" Wild and file globbing stuff
set browsedir=buffer                  " browse files in same dir as open file
set wildmenu                          " Enhanced command line completion.
set wildmode=list:longest             " Complete files like a shell.
set wildignorecase
" output, VCS
set wildignore+=.git,.hg,.svn
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*,*.gem
set wildignore+=*.aux,*.out,*.toc
set wildignore+=*.o,*.obj,*.exe,*.dll,*.manifest,*.rbc,*.class
set wildignore+=*.ai,*.bmp,*.gif,*.ico,*.jpg,*.jpeg,*.png,*.psd,*.webp
set wildignore+=*.avi,*.m4a,*.mp3,*.oga,*.ogg,*.wav,*.webm
set wildignore+=*.eot,*.otf,*.ttf,*.woff
set wildignore+=*.doc,*.pdf
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
set wildignore+=*.swp,.lock,.DS_Store,._*

" file saving
"set autoread                         " reload files if they were edited
                                      " elsewhere
set fileformats=unix,mac,dos
set fileformat=unix
"set tags=./tags,./TAGS,tags,TAGS
set tags=~/.vim/.tags/tags

" info file
set viminfo+=n~/.vim/.viminfo

" backups
set noswapfile                        " useless
" Make Vim able to edit crontab files again.
set backupskip=/tmp/*,/private/tmp/*"
" double slash means create dir structure to mirror file's path
set undofile
set undolevels=500
set undoreload=500
set undodir=~/.vim/.undo//
set backupdir=~/.vim/.backup//
set directory=~/.vim/.swp//
set backup
" Make those folders automatically if they don't already exist.
if !isdirectory(expand(&undodir))
  call mkdir(expand(&undodir), "p")
endif
if !isdirectory(expand(&backupdir))
  call mkdir(expand(&backupdir), "p")
endif
if !isdirectory(expand(&directory))
  call mkdir(expand(&directory), "p")
endif

" buffer reuse
set hidden                            " remember undo after quitting
set switchbuf=useopen                 " reveal already opened files from the
                                      " quickfix window instead of opening new
                                      " buffers

" clipboard -- use os clipboard
if (exists("$DISPLAY") || has('mac')) && has('clipboard')
  set clipboard=unnamed  " Share system clipboard.
  if has('unnamedplus')
    set clipboard+=unnamedplus  " Share X windows clipboard.
  endif
endif

" variable to highlight markdown fenced code properly -- uses tpope's
" vim-markdown plugin (which is bundled with vim7.4 now)
let g:markdown_fenced_languages = [
      \ 'coffee', 'CoffeeScript=coffee',
      \ 'css',
      \ 'erb=eruby',
      \ 'html',
      \ 'javascript', 'js=javascript', 'json=javascript',
      \ 'ruby',
      \ 'sass',
      \ 'xml',
      \ ]

" netrw
" disable netrw in favor of vimfiler -- netrw sucks!
let g:loaded_netrwPlugin = 1
" netrw in details format when no vimfiler
let g:netrw_liststyle = 3

" Mappings ---------------------------------------------------------------------
" Map <Leader> to Space
" no longer using comma so I can reverse repeat fFtT searches
" no longer using \ so I can type escaped chars :/
let mapleader = "\<Space>"

" see plugin/mappings.vim for more autoloaded settings

" Autocommands -----------------------------------------------------------------
if has("autocmd")
  " Resize splits when the window is resized
  autocmd vimrc VimResized * :wincmd =

  " Set editor configs
  " force 2sp for js
  autocmd vimrc FileType coffee,javascript
        \ setlocal softtabstop=2 tabstop=2 shiftwidth=2

  " Enable soft-wrapping for text files
  autocmd vimrc FileType text,markdown
        \ setlocal wrap linebreak nolist textwidth=80

  " crontab on OSX needs a tempfile
  if has('mac')
    autocmd vimrc BufEnter /private/tmp/crontab.*
          \ setlocal backupcopy=yes
  endif

  " see after/ftplugin/*.vim for more filetype specific stuff
endif

" leave this down here since it trims local settings
set secure                            " no unsafe local vimrc commands

" vim: syntax=vim :
