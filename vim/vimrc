" .dotfiles/vim/.vimrc

if has("unix")
  let s:uname = system("uname")
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" plugin management
filetype off
set rtp+=~/.vim/bundle/neobundle.vim/
call neobundle#rc(expand('~/.vim/bundle/'))
NeoBundleFetch 'Shougo/neobundle.vim'

" plugin dependencies
NeoBundle 'Shougo/vimproc'
NeoBundle "MarcWeber/vim-addon-mw-utils"
NeoBundle "tomtom/tlib_vim"
"
" ui
NeoBundle 'altercation/vim-colors-solarized'
NeoBundle 'itchyny/lightline.vim'
NeoBundle 'kien/rainbow_parentheses.vim'
NeoBundle 'nathanaelkane/vim-indent-guides'
NeoBundle 'vim-scripts/IndexedSearch'
NeoBundle 'vim-scripts/kwbdi.vim'

" menus and special features
" snipmate depends on vim-addon-mw-utils and tlib_vim
NeoBundle 'int3/vim-extradite'
NeoBundle 'jeetsukumaran/vim-buffergator'
NeoBundle 'kien/ctrlp.vim'
NeoBundle 'majutsushi/tagbar'
NeoBundle 'Rykka/lastbuf.vim'
NeoBundle 'scrooloose/nerdtree'
NeoBundle 'tpope/vim-fugitive'
NeoBundle 'tpope/vim-eunuch'
NeoBundle 'vim-scripts/Rename2'

" editing keys and commands
NeoBundle 'airblade/vim-gitgutter'
NeoBundle 'AndrewRadev/switch.vim'
NeoBundle 'edsono/vim-matchit'
NeoBundle 'ervandew/supertab'
NeoBundle 'garbas/vim-snipmate'
NeoBundle 'godlygeek/tabular'
NeoBundle 'mikehaertl/pdv-standalone'
NeoBundle 'scrooloose/nerdcommenter'
NeoBundle 'Shougo/neocomplcache'
NeoBundle 'tpope/vim-repeat'
NeoBundle 'tpope/vim-speeddating'
NeoBundle 'maxbrunsfeld/vim-yankstack'
NeoBundle 'michaeljsmith/vim-indent-object'
NeoBundle 'nishigori/vim-sunday'
NeoBundle 'paradigm/TextObjectify'
NeoBundle 'scrooloose/syntastic'
NeoBundle 'tpope/vim-surround'
NeoBundle 'tpope/vim-unimpaired'
NeoBundle 'vim-scripts/AnsiEsc.vim'

" syntax highlighting and filetype specific
NeoBundle 'acustodioo/vim-tmux'
" Bundle 'cakebaker/scss-syntax.vim'
NeoBundle 'davejlong/cf-utils.vim'
NeoBundle 'digitaltoad/vim-jade'
NeoBundle 'gregsexton/MatchTag'
NeoBundle 'groenewege/vim-less'
NeoBundle 'hail2u/vim-css3-syntax'
NeoBundle 'itspriddle/vim-jquery'
NeoBundle 'juvenn/mustache.vim'
NeoBundle 'leshill/vim-json'
NeoBundle 'mattn/emmet-vim'
NeoBundle 'pangloss/vim-javascript'
NeoBundle 'rodjek/vim-puppet'
NeoBundle 'shawncplus/phpcomplete.vim'
NeoBundle 'skammer/vim-css-color'
NeoBundle 'tpope/vim-git'
NeoBundle 'tpope/vim-haml'
NeoBundle 'tpope/vim-markdown'
NeoBundle 'tpope/vim-ragtag'
NeoBundle 'tpope/vim-rails'
NeoBundle 'vadv/vim-chef'
NeoBundle 'vim-ruby/vim-ruby'

" OS specific bundles
if s:uname == "Darwin\n"
  NeoBundle 'henrik/vim-reveal-in-finder'
endif

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" syntax (also end of vundle)
syntax on
filetype plugin indent on
runtime macros/matchit.vim

NeoBundleCheck

""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" display
set title                             " wintitle = filename - vim
set titleold=""                       " restore title on exit
set background=light
if &term == 'linux' && $COLORTERM != 'gnome-terminal' " not tty mode
  set t_Co=16
  colorscheme elflord
else
  set t_Co=256
  silent! colorscheme solarized       " STFU if no solarized
endif
set number
set numberwidth=5
set cursorline
set scrolloff=3                       " show 2 lines of context
set foldlevel=99                      " show all folds by default
set foldlevelstart=99                 " show all folds by default
set splitbelow
set splitright
set mouse=a
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" status line - most of this is handled by vim-powerline
set laststatus=2
set showcmd                           " incomplete commands on
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" whitespace
set nowrap
set tabstop=2
set shiftwidth=2
set softtabstop=2
set expandtab
set backspace=indent,eol,start        " bs anything
set noeol
"set smartindent -- using filetype indenting
" Trailing whitespace
set list
set listchars=""                      " reset
set listchars=tab:→\ 
set listchars+=trail:·
set listchars+=extends:»              " show cut off when nowrap
set listchars+=precedes:«
set nojoinspaces
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" search
set hlsearch
set incsearch
set ignorecase
set smartcase
" fix regexes
nnoremap / /\v
vnoremap / /\v
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Wild and file globbing stuff
set browsedir=buffer                  " browse files in same dir as open file
set wildmenu                          " Enhanced command line completion.
set wildmode=list:longest             " Complete files like a shell.
" output, VCS
set wildignore+=*.o,*.out,*.obj,*.exe,*.dll,.git,*.rbc,*.class,.svn,*.gem
set wildignore+=*.gif,*.jpg,*.jpeg,*.png,*.psd,*.ico
set wildignore+=*.zip,*.tar.gz,*.tar.bz2,*.rar,*.tar.xz
" bundler and SASS
set wildignore+=*/vendor/gems/*,*/vendor/cache/*,*/.bundle/*,*/.sass-cache/*
" JUNK
set wildignore+=*.swp,.lock,.DS_Store,._*
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" file saving
set autoread                          " reload files if they were edited elsewhere
set fileformats=unix,mac,dos
set fileformat=unix
set encoding=utf-8
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" backups
set noswapfile                        " eff that
set nobackup                          " hate those
set hidden                            " remember undo after quitting
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" filetype specific
if has("autocmd")
  ""
  " Set editor configs
  " @TODO use editorconfig plugin instead
  " Makefiles, Python use real tabs
  au FileType gitconfig   set noexpandtab
  au FileType make        set noexpandtab
  au FileType python      set noexpandtab
  " Enable soft-wrapping for text files
  au FileType text,txt,markdown,html,xhtml,eruby setlocal wrap linebreak nolist textwidth=80

  ""
  " Add syntax highlighting to these filetypes
  " vim-chef support for ruby files (turned off eruby)
  au FileType ruby set filetype=ruby.eruby.chef
  au BufRead,BufNewFile *.conf set filetype=conf
  au BufRead,BufNewFile *.scss set filetype=scss
  au BufRead,BufNewFile *.dump set filetype=sql

  " crontab on OSX needs a tempfile
  if s:uname == "Darwin\n"
    au BufEnter /private/tmp/crontab.* setl backupcopy=yes
  endif
endif
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" befores -- plugin settings and keybindings
for f in split(glob('~/.vim/before/*.vim'), '\n')
  exe 'source' f
endfor
""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Local config
if filereadable($HOME . "/.vimrc.local")
  source ~/.vimrc.local
endif
