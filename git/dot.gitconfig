# Global gitconfig
#
# Don't assign global GIT_CONFIG var since it has trouble with [include] when
# you do that
#

# ============================================================================

[alias]
	a       = add
	aa      = add .

	b       = branch
	be      = branch --edit-description
	bv      = branch --verbose
	done    = branch --verbose --merged
	um      = branch --verbose --no-merged

	co      = checkout
	cb      = checkout -b
	ct      = checkout --track
	master  = checkout master

	ci      = commit
	ca      = commit --amend
	cm      = commit -m

	get     = config --get
	cfg     = config --global --edit

	lasttag = describe --tags --abbrev=0

	d       = diff
	dc      = diff --cached
	dino    = diff --name-only

	fo      = fetch origin

	git     = !exec git
	g       = grep --break --heading --line-number

	l       = log --abbrev-commit --oneline
	ld      = log --abbrev-commit --date=short --pretty=format:'%C(yellow)%h %C(reset)%s %C(green)(%cr) %C(blue)<%an>%C(magenta)%d%C(reset)'
	ll      = log --abbrev-commit --oneline --decorate --all
	lb      = log --abbrev-commit --oneline --decorate --all --graph
	lg      = log --abbrev-commit           --decorate --all --graph
	new     = log --no-merges --abbrev-commit --oneline         ORIG_HEAD..
	news    = log --no-merges --abbrev-commit --oneline --stat  ORIG_HEAD..

	m       = merge

	pom     = pull --ff-only origin master
	pr      = pull --rebase
	pullall = "!f() { git pull \"$@\" && git submodule update --init --recursive; }; f"
	pum     = pull --ff-only upstream master

	poh     = push origin HEAD

	rb      = rebase
	rbc     = rebase --continue

	rso     = remote show origin

	rehard  = reset --hard

	forget  = rm -r --cached

	last    = show --show-signature

	st      = status
	s       = status --short --branch

	t       = tag

	track   = branch -u

	dsf     = "!f() { [ -z \"$GIT_PREFIX\" ] || cd -- \"$GIT_PREFIX\" && git diff --color \"$@\" | diff-so-fancy  | less --tabs=4 -RFX; }; f"

	# ---------------------------------------------------------------------------
	# Shell commands
	# ---------------------------------------------------------------------------

	root    = !pwd -P

	# ---------------------------------------------------------------------------
	# git-extras
	# ---------------------------------------------------------------------------

	cl      = changelog --list
	copy    = copy-branch
	dmb     = delete-merged-branches

	# ---------------------------------------------------------------------------
	# my own git-* commands
	# ---------------------------------------------------------------------------

	i       = ink
	rel     = relevant

# ============================================================================
# Color
# ============================================================================

[color]
	branch      = auto
	diff        = auto
	grep        = auto
	interactive = auto
	status      = auto
	ui          = auto
	pager       = true

[color "diff-highlight"]
	oldNormal    = red bold
	oldHighlight = red bold 52
	newNormal    = green bold
	newHighlight = green bold 22

# ============================================================================
# URL aliases
# ============================================================================

[url "git@github.com:"]
	insteadOf = "gh:"
	pushInsteadOf = "github:"
	pushInsteadOf = "git://github.com/"

[url "git://github.com/"]
	insteadOf = "github:"

[url "git@gist.github.com:"]
	insteadOf = "gst:"
	pushInsteadOf = "gist:"
	pushInsteadOf = "git://gist.github.com/"

[url "git://gist.github.com/"]
	insteadOf = "gist:"

[url "git@heroku.com:"]
	insteadOf = "heroku:"

# ============================================================================
# Repo settings and command options
# ============================================================================

[commit]
	gpgsign = true
	template = "~/.dotfiles/git/commit-template"

[core]
	compression = -1
# editor = "vim -f" ; removed so git will use env EDITOR or VISUAL
	sharedRepository = 0664
	commentchar = ";"
# pager = less -x4 ; removed so git will use the env GIT_PAGER
	ignorecase = false

[diff]
	compactionHeuristic = true
	renames = true

[filter "media"]
	clean     = git media clean %f
	smudge    = git media smudge %f
	required  = true

[filter "lfs"]
	clean     = git-lfs clean %f
	smudge    = git-lfs smudge %f
	required  = true

[log]
	mailmap = true

[mailmap]
	file = "~/.dotfiles/local/mailmap"

[push]
	default = simple

[rebase]
	stat = true

[rerere]
	enabled = 1

# ============================================================================
# Programs (assumes may be overridden by OS settings)
# ============================================================================

[gui]
	fontui = -family \"Fira Sans\" -size -10 -weight normal -slant roman -underline 0 -overstrike 0
	fontdiff = -family \"Fira Mono for Powerline\" -size -10 -weight normal -slant roman -underline 0 -overstrike 0
	commitmsgwidth = 80
	diffcontext = 10

[difftool]
	prompt = false

[mergetool]
	prompt = false

[pager]
	status = true

# ============================================================================
# Local
# ============================================================================

[include]
	path = "~/.dotfiles/local/gitconfig"
