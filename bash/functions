# https://github.com/jmcantrell/dotfiles-zsh/blob/master/zsh/conf.d/40-functions

mcd() {
  mkdir -p "$@" && cd "$@"
}

# Change directory to the nearest repo root
cdr()
{
  local dir=${1:-$PWD}
  if [[ -d $dir/.svn ]]; then
      while [[ -d $dir/.. && -d $dir/../.svn ]]; do
          dir+=/..
      done
  else
      while [[ -d $dir && ! ( -d $dir/.git || -d $dir/.hg || -d $dir/.bzr ) ]]; do
          dir+=/..
      done
  fi
  [[ -d $dir ]] && cd "$dir"
}

# type localip to get ethernet or wireless ip
localip() {
  local localip="`ipconfig getifaddr en0`"
  if [[ "$localip" = "" ]]; then
    localip="`ipconfig getifaddr en1`"
  fi
  echo $localip
}

# recursively chowns folders ug+rws, files ug+rw from current folder
groupperms() {
  echo "You're sure ${PWD} is the right place? Last chance to Ctrl-C."
  read;
  sudo chmod -R ug+rw .*              # the dotfiles
  sudo chmod -R ug+rw *               # the files and folders
  sudo find . -type d -exec chmod ug+rws {} \;
}

# http://www.commandlinefu.com/commands/view/10771/osx-function-to-list-all-members-for-a-given-group
members () {
  dscl . -list /Users | while read user; do printf "$user "; dsmemberutil checkmembership -U "$user" -G "$*"; done | grep "is a member" | cut -d " " -f 1;
};

gitexport() {
  local to_dir = "${2:-./gitexport}"
  rsync -a ${1:-./} $to_dir --exclude $to_dir --exclude .git
}

##
# os specific
case "$OSTYPE" in
  darwin*)  [ -f "$BASH_DOTFILES/functions-osx" ] && source "$BASH_DOTFILES/functions-osx"
            ;;
  linux*)   [ -f "$BASH_DOTFILES/functions-linux" ] && source "$BASH_DOTFILES/functions-linux"
            ;;
esac
